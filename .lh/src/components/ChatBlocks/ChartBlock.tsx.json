{
    "sourceFile": "src/components/ChatBlocks/ChartBlock.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756092415457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756361352058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+interface ChartBlockProps {\n+  chart_type: 'pie' | 'bar' | 'line';\n+  title: string;\n+  labels: string[];\n+  datasets: Array<{ label: string; data: number[]; backgroundColor?: string[] }>;\n+  options?: any;\n+}\n+\n+export const ChartBlock: React.FC<ChartBlockProps> = ({ chart_type, title, labels, datasets, options }) => {\n+  // Ensure we have valid data\n+  const safeLabels = Array.isArray(labels) ? labels : [];\n+  const safeDatasets = Array.isArray(datasets) && datasets.length > 0 ? datasets : [{ label: 'Data', data: [] }];\n+  const data = safeDatasets[0]?.data || [];\n+  \n+  // For now, we'll create a simple chart representation\n+  // In a real implementation, you'd use Chart.js or similar library\n+  \n+  const renderSimpleChart = () => {\n+    switch (chart_type) {\n+      case 'pie':\n+        return (\n+          <div className=\"flex items-center justify-center space-x-4 flex-wrap\">\n+            {safeLabels.map((label, index) => (\n+              <div key={index} className=\"text-center m-2\">\n+                <div \n+                  className=\"w-16 h-16 rounded-full flex items-center justify-center text-white font-bold\"\n+                  style={{ \n+                    backgroundColor: safeDatasets[0]?.backgroundColor?.[index] || '#3b82f6',\n+                    minWidth: '64px'\n+                  }}\n+                >\n+                  {data[index] || 0}\n+                </div>\n+                <div className=\"text-sm text-gray-600 mt-2 max-w-20 text-center\">{label}</div>\n+              </div>\n+            ))}\n+          </div>\n+        );\n+      case 'bar':\n+        return (\n+          <div className=\"space-y-3\">\n+            {safeLabels.map((label, index) => {\n+              const value = data[index] || 0;\n+              const maxValue = Math.max(...data, 1); // Prevent division by zero\n+              const percentage = maxValue > 0 ? (value / maxValue) * 100 : 0;\n+              \n+              return (\n+                <div key={index} className=\"flex items-center space-x-3\">\n+                  <span className=\"text-sm text-gray-600 w-24 flex-shrink-0\">{label}</span>\n+                  <div className=\"flex-1 bg-gray-200 rounded-full h-6\">\n+                    <div \n+                      className=\"bg-blue-500 h-6 rounded-full transition-all duration-500\"\n+                      style={{ width: `${percentage}%` }}\n+                    ></div>\n+                  </div>\n+                  <span className=\"text-sm font-medium w-16 text-right\">{value}</span>\n+                </div>\n+              );\n+            })}\n+          </div>\n+        );\n+      case 'line':\n+        return (\n+          <div className=\"text-center py-8\">\n+            <div className=\"text-gray-500\">Line chart visualization</div>\n+            <div className=\"text-sm text-gray-400 mt-2\">\n+              {safeLabels.join(' → ')}: {data.join(', ')}\n+            </div>\n+          </div>\n+        );\n+      default:\n+        return <div>Unsupported chart type: {chart_type}</div>;\n+    }\n+  };\n+\n+  return (\n+    <div className=\"bg-white rounded-lg border p-4\">\n+      <h3 className=\"font-semibold text-gray-800 mb-4 text-center\">{title}</h3>\n+      <div className=\"w-full\">\n+        {safeLabels.length > 0 && data.length > 0 ? (\n+          renderSimpleChart()\n+        ) : (\n+          <div className=\"text-center py-8 text-gray-500\">\n+            No data available for chart\n+          </div>\n+        )}\n+      </div>\n+    </div>\n+  );\n+};\n+\n"
                }
            ],
            "date": 1756092415457,
            "name": "Commit-0",
            "content": "interface ChartBlockProps {\n  chart_type: 'pie' | 'bar' | 'line';\n  title: string;\n  labels: string[];\n  datasets: Array<{ label: string; data: number[]; backgroundColor?: string[] }>;\n  options?: any;\n}\n\nexport const ChartBlock: React.FC<ChartBlockProps> = ({ chart_type, title, labels, datasets, options }) => {\n  // For now, we'll create a simple chart representation\n  // In a real implementation, you'd use Chart.js or similar library\n  \n  const renderSimpleChart = () => {\n    switch (chart_type) {\n      case 'pie':\n        return (\n          <div className=\"flex items-center justify-center space-x-4\">\n            {labels.map((label, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold\">\n                  {datasets[0]?.data[index] || 0}\n                </div>\n                <div className=\"text-sm text-gray-600 mt-2\">{label}</div>\n              </div>\n            ))}\n          </div>\n        );\n      case 'bar':\n        return (\n          <div className=\"space-y-2\">\n            {labels.map((label, index) => (\n              <div key={index} className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-600 w-20\">{label}</span>\n                <div className=\"flex-1 bg-gray-200 rounded-full h-4\">\n                  <div \n                    className=\"bg-blue-500 h-4 rounded-full\"\n                    style={{ width: `${(datasets[0]?.data[index] || 0)}%` }}\n                  ></div>\n                </div>\n                <span className=\"text-sm font-medium\">{datasets[0]?.data[index] || 0}</span>\n              </div>\n            ))}\n          </div>\n        );\n      case 'line':\n        return (\n          <div className=\"text-center py-8\">\n            <div className=\"text-gray-500\">Line chart visualization</div>\n            <div className=\"text-sm text-gray-400 mt-2\">\n              {labels.join(' → ')}: {datasets[0]?.data.join(', ')}\n            </div>\n          </div>\n        );\n      default:\n        return <div>Unsupported chart type</div>;\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg border p-4\">\n      <h3 className=\"font-semibold text-gray-800 mb-4 text-center\">{title}</h3>\n      <div className=\"w-full\">\n        {renderSimpleChart()}\n      </div>\n    </div>\n  );\n};\n"
        }
    ]
}