{
    "sourceFile": "src/components/ChatBlocks/ListBlock.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1756092415455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756361352055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+interface ListBlockProps {\n+  style: 'dotted' | 'numbered' | 'bulleted';\n+  title?: string;\n+  items: string[];\n+}\n+\n+export const ListBlock: React.FC<ListBlockProps> = ({ style, title, items }) => {\n+  // Ensure items is always an array\n+  const safeItems = Array.isArray(items) ? items : [];\n+  \n+  const renderList = () => {\n+    switch (style) {\n+      case 'numbered':\n+        return (\n+          <ol className=\"list-decimal list-inside space-y-1\">\n+            {safeItems.map((item, index) => (\n+              <li key={index} className=\"text-gray-700\">{item}</li>\n+            ))}\n+          </ol>\n+        );\n+      case 'bulleted':\n+        return (\n+          <ul className=\"list-disc list-inside space-y-1\">\n+            {safeItems.map((item, index) => (\n+              <li key={index} className=\"text-gray-700\">{item}</li>\n+            ))}\n+          </ul>\n+        );\n+      case 'dotted':\n+        return (\n+          <div className=\"space-y-2\">\n+            {safeItems.map((item, index) => (\n+              <div key={index} className=\"flex items-start\">\n+                <span className=\"w-2 h-2 bg-gray-400 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n+                <span className=\"text-gray-700\">{item}</span>\n+              </div>\n+            ))}\n+          </div>\n+        );\n+      default:\n+        // Fallback to dotted style for unknown styles\n+        return (\n+          <div className=\"space-y-2\">\n+            {safeItems.map((item, index) => (\n+              <div key={index} className=\"flex items-start\">\n+                <span className=\"w-2 h-2 bg-gray-400 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n+                <span className=\"text-gray-700\">{item}</span>\n+              </div>\n+            ))}\n+          </div>\n+        );\n+    }\n+  };\n+\n+  return (\n+    <div className=\"bg-white rounded-lg border p-4\">\n+      {title && (\n+        <h3 className=\"font-semibold text-gray-800 mb-3\">{title}</h3>\n+      )}\n+      {safeItems.length > 0 ? (\n+        renderList()\n+      ) : (\n+        <div className=\"text-gray-500 text-sm\">No items to display</div>\n+      )}\n+    </div>\n+  );\n+};\n+\n"
                }
            ],
            "date": 1756092415455,
            "name": "Commit-0",
            "content": "interface ListBlockProps {\n  style: 'dotted' | 'numbered' | 'bulleted';\n  title?: string;\n  items: string[];\n}\n\nexport const ListBlock: React.FC<ListBlockProps> = ({ style, title, items }) => {\n  const renderList = () => {\n    switch (style) {\n      case 'numbered':\n        return (\n          <ol className=\"list-decimal list-inside space-y-1\">\n            {items.map((item, index) => (\n              <li key={index} className=\"text-gray-700\">{item}</li>\n            ))}\n          </ol>\n        );\n      case 'bulleted':\n        return (\n          <ul className=\"list-disc list-inside space-y-1\">\n            {items.map((item, index) => (\n              <li key={index} className=\"text-gray-700\">{item}</li>\n            ))}\n          </ul>\n        );\n      default: // dotted\n        return (\n          <div className=\"space-y-2\">\n            {items.map((item, index) => (\n              <div key={index} className=\"flex items-start\">\n                <span className=\"w-2 h-2 bg-gray-400 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span className=\"text-gray-700\">{item}</span>\n              </div>\n            ))}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg border p-4\">\n      {title && (\n        <h3 className=\"font-semibold text-gray-800 mb-3\">{title}</h3>\n      )}\n      {renderList()}\n    </div>\n  );\n};\n"
        }
    ]
}