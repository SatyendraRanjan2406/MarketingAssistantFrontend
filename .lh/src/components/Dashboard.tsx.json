{
    "sourceFile": "src/components/Dashboard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1755587604299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755588676929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,9 @@\n import InsightsSidebar from './InsightsSidebar';\n import ActionModal from './ActionModal';\n import { Platform } from '../types';\n \n-interface DashboardProps {\n-  onLogout: () => void;\n-}\n-\n-const Dashboard: React.FC<DashboardProps> = ({ onLogout }) => {\n+const Dashboard: React.FC = () => {\n   const [currentPlatform, setCurrentPlatform] = useState<Platform>('google');\n   const [showActionModal, setShowActionModal] = useState(false);\n   const [selectedAction, setSelectedAction] = useState<any>(null);\n \n@@ -26,10 +22,9 @@\n   return (\n     <div className=\"min-h-screen bg-gray-50\">\n       <Header \n         currentPlatform={currentPlatform} \n-        onPlatformSwitch={handlePlatformSwitch}\n-        onLogout={onLogout}\n+        onPlatformSwitch={handlePlatformSwitch} \n       />\n       \n       <div className=\"flex\">\n         <main className=\"flex-1 p-6 pr-0\">\n"
                }
            ],
            "date": 1755587604299,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport Header from './Header';\nimport ChatInterface from './ChatInterface';\nimport InsightsSidebar from './InsightsSidebar';\nimport ActionModal from './ActionModal';\nimport { Platform } from '../types';\n\ninterface DashboardProps {\n  onLogout: () => void;\n}\n\nconst Dashboard: React.FC<DashboardProps> = ({ onLogout }) => {\n  const [currentPlatform, setCurrentPlatform] = useState<Platform>('google');\n  const [showActionModal, setShowActionModal] = useState(false);\n  const [selectedAction, setSelectedAction] = useState<any>(null);\n\n  const handlePlatformSwitch = (platform: Platform) => {\n    setCurrentPlatform(platform);\n  };\n\n  const handleTakeAction = (action: any) => {\n    setSelectedAction(action);\n    setShowActionModal(true);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        currentPlatform={currentPlatform} \n        onPlatformSwitch={handlePlatformSwitch}\n        onLogout={onLogout}\n      />\n      \n      <div className=\"flex\">\n        <main className=\"flex-1 p-6 pr-0\">\n          <ChatInterface \n            platform={currentPlatform} \n            onTakeAction={handleTakeAction}\n          />\n        </main>\n        \n        <InsightsSidebar platform={currentPlatform} />\n      </div>\n\n      {showActionModal && (\n        <ActionModal\n          action={selectedAction}\n          platform={currentPlatform}\n          onClose={() => setShowActionModal(false)}\n          onConfirm={() => {\n            setShowActionModal(false);\n            // Handle action implementation\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"
        }
    ]
}