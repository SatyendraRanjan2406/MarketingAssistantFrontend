{
    "sourceFile": "src/components/LoginScreen.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1755587604298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1755588676722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,313 @@\n+import React from 'react';\n+import { TrendingUp, Zap, BarChart3, Eye, EyeOff } from 'lucide-react';\n+\n+interface LoginScreenProps {\n+  onLogin: () => void;\n+}\n+\n+const LoginScreen: React.FC<LoginScreenProps> = ({ onLogin }) => {\n+  const [isSignup, setIsSignup] = React.useState(false);\n+  const [showPassword, setShowPassword] = React.useState(false);\n+  const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\n+  const [formData, setFormData] = React.useState({\n+    firstName: '',\n+    lastName: '',\n+    email: '',\n+    password: '',\n+    confirmPassword: '',\n+    company: '',\n+    agreeToTerms: false\n+  });\n+\n+  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    const { name, value, type, checked } = e.target;\n+    setFormData(prev => ({\n+      ...prev,\n+      [name]: type === 'checkbox' ? checked : value\n+    }));\n+  };\n+\n+  const handleSubmit = (e: React.FormEvent) => {\n+    e.preventDefault();\n+    if (isSignup) {\n+      // Handle signup logic\n+      if (formData.password !== formData.confirmPassword) {\n+        alert('Passwords do not match');\n+        return;\n+      }\n+      if (!formData.agreeToTerms) {\n+        alert('Please agree to the terms and conditions');\n+        return;\n+      }\n+    }\n+    onLogin();\n+  };\n+  return (\n+    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n+      <div className=\"max-w-md w-full\">\n+        {/* Logo and Branding */}\n+        <div className=\"text-center mb-8\">\n+          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n+            <TrendingUp className=\"w-8 h-8 text-white\" />\n+          </div>\n+          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">AI Marketing Assistant</h1>\n+          <p className=\"text-gray-600\">Advertising Intelligence Platform</p>\n+        </div>\n+\n+        {/* Features Preview */}\n+        <div className=\"mb-8 space-y-4\">\n+          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n+            <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n+              <Zap className=\"w-4 h-4 text-green-600\" />\n+            </div>\n+            <span>Real-time performance optimization</span>\n+          </div>\n+          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n+            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n+              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\n+            </div>\n+            <span>Advanced analytics & insights</span>\n+          </div>\n+          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n+            <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n+              <TrendingUp className=\"w-4 h-4 text-purple-600\" />\n+            </div>\n+            <span>Automated campaign management</span>\n+          </div>\n+        </div>\n+\n+        {/* Login/Signup Form */}\n+        <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n+          {/* Form Toggle */}\n+          <div className=\"flex bg-gray-100 rounded-lg p-1 mb-6\">\n+            <button\n+              type=\"button\"\n+              onClick={() => setIsSignup(false)}\n+              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n+                !isSignup\n+                  ? 'bg-white text-gray-900 shadow-sm'\n+                  : 'text-gray-600 hover:text-gray-900'\n+              }`}\n+            >\n+              Sign In\n+            </button>\n+            <button\n+              type=\"button\"\n+              onClick={() => setIsSignup(true)}\n+              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n+                isSignup\n+                  ? 'bg-white text-gray-900 shadow-sm'\n+                  : 'text-gray-600 hover:text-gray-900'\n+              }`}\n+            >\n+              Sign Up\n+            </button>\n+          </div>\n+\n+          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n+            {isSignup && (\n+              <>\n+                <div className=\"grid grid-cols-2 gap-4\">\n+                  <div>\n+                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                      First Name\n+                    </label>\n+                    <input\n+                      type=\"text\"\n+                      id=\"firstName\"\n+                      name=\"firstName\"\n+                      value={formData.firstName}\n+                      onChange={handleInputChange}\n+                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                      placeholder=\"John\"\n+                      required\n+                    />\n+                  </div>\n+                  <div>\n+                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                      Last Name\n+                    </label>\n+                    <input\n+                      type=\"text\"\n+                      id=\"lastName\"\n+                      name=\"lastName\"\n+                      value={formData.lastName}\n+                      onChange={handleInputChange}\n+                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                      placeholder=\"Doe\"\n+                      required\n+                    />\n+                  </div>\n+                </div>\n+                <div>\n+                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                    Company Name\n+                  </label>\n+                  <input\n+                    type=\"text\"\n+                    id=\"company\"\n+                    name=\"company\"\n+                    value={formData.company}\n+                    onChange={handleInputChange}\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                    placeholder=\"Your Company\"\n+                    required\n+                  />\n+                </div>\n+              </>\n+            )}\n+            <div>\n+              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                Email Address\n+              </label>\n+              <input\n+                type=\"email\"\n+                id=\"email\"\n+                name=\"email\"\n+                value={formData.email}\n+                onChange={handleInputChange}\n+                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                placeholder=\"your@email.com\"\n+                required\n+              />\n+            </div>\n+            <div>\n+              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                Password\n+              </label>\n+              <div className=\"relative\">\n+                <input\n+                  type={showPassword ? \"text\" : \"password\"}\n+                  id=\"password\"\n+                  name=\"password\"\n+                  value={formData.password}\n+                  onChange={handleInputChange}\n+                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                  placeholder=\"••••••••\"\n+                  required\n+                />\n+                <button\n+                  type=\"button\"\n+                  onClick={() => setShowPassword(!showPassword)}\n+                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n+                >\n+                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n+                </button>\n+              </div>\n+              {isSignup && (\n+                <p className=\"mt-1 text-xs text-gray-500\">\n+                  Must be at least 8 characters with uppercase, lowercase, and number\n+                </p>\n+              )}\n+            </div>\n+            {isSignup && (\n+              <div>\n+                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                  Confirm Password\n+                </label>\n+                <div className=\"relative\">\n+                  <input\n+                    type={showConfirmPassword ? \"text\" : \"password\"}\n+                    id=\"confirmPassword\"\n+                    name=\"confirmPassword\"\n+                    value={formData.confirmPassword}\n+                    onChange={handleInputChange}\n+                    className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                    placeholder=\"••••••••\"\n+                    required\n+                  />\n+                  <button\n+                    type=\"button\"\n+                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n+                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n+                  >\n+                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n+                  </button>\n+                </div>\n+              </div>\n+            )}\n+            {isSignup && (\n+              <div className=\"flex items-start space-x-3\">\n+                <input\n+                  type=\"checkbox\"\n+                  id=\"agreeToTerms\"\n+                  name=\"agreeToTerms\"\n+                  checked={formData.agreeToTerms}\n+                  onChange={handleInputChange}\n+                  className=\"mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n+                  required\n+                />\n+                <label htmlFor=\"agreeToTerms\" className=\"text-sm text-gray-700\">\n+                  I agree to the{' '}\n+                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n+                    Terms of Service\n+                  </a>{' '}\n+                  and{' '}\n+                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n+                    Privacy Policy\n+                  </a>\n+                </label>\n+              </div>\n+            )}\n+            <button\n+              type=\"submit\"\n+              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n+            >\n+              {isSignup ? 'Create Account' : 'Sign In'}\n+            </button>\n+          </form>\n+          \n+          {!isSignup && (\n+            <div className=\"mt-6 text-center\">\n+              <a href=\"#\" className=\"text-sm text-blue-600 hover:text-blue-700\">\n+                Forgot your password?\n+              </a>\n+            </div>\n+          )}\n+          \n+          {isSignup && (\n+            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n+              <div className=\"flex items-start space-x-3\">\n+                <TrendingUp className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n+                <div>\n+                  <h4 className=\"font-medium text-blue-900\">What happens next?</h4>\n+                  <ul className=\"mt-2 text-sm text-blue-800 space-y-1\">\n+                    <li>• Connect your Google Ads and Meta Ads accounts</li>\n+                    <li>• AI analyzes your campaign performance</li>\n+                    <li>• Start receiving optimization recommendations</li>\n+                  </ul>\n+                </div>\n+              </div>\n+            </div>\n+          )}\n+        </div>\n+\n+        {!isSignup && (\n+          <div className=\"mt-8 text-center text-sm text-gray-500\">\n+            Don't have an account?{' '}\n+            <button\n+              onClick={() => setIsSignup(true)}\n+              className=\"text-blue-600 hover:text-blue-700 underline\"\n+            >\n+              Sign up\n+            </button>\n+          </div>\n+        )}\n+        \n+        {isSignup && (\n+          <div className=\"mt-8 text-center text-sm text-gray-500\">\n+            Already have an account?{' '}\n+            <button\n+              onClick={() => setIsSignup(false)}\n+              className=\"text-blue-600 hover:text-blue-700 underline\"\n+            >\n+              Sign in\n+            </button>\n+          </div>\n+        )}\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default LoginScreen;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755589673450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,410 @@\n+import React from 'react';\n+import { TrendingUp, Zap, BarChart3, Eye, EyeOff } from 'lucide-react';\n+import authService from '../services/authService';\n+\n+interface LoginScreenProps {\n+  onLogin: (user: any) => void;\n+}\n+\n+const LoginScreen: React.FC<LoginScreenProps> = ({ onLogin }) => {\n+  const [isSignup, setIsSignup] = React.useState(false);\n+  const [showPassword, setShowPassword] = React.useState(false);\n+  const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\n+  const [isLoading, setIsLoading] = React.useState(false);\n+  const [error, setError] = React.useState('');\n+  const [formData, setFormData] = React.useState({\n+    firstName: '',\n+    lastName: '',\n+    email: '',\n+    username: '',\n+    password: '',\n+    confirmPassword: '',\n+    company: '',\n+    agreeToTerms: false\n+  });\n+\n+  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n+    const { name, value, type, checked } = e.target;\n+    setFormData(prev => ({\n+      ...prev,\n+      [name]: type === 'checkbox' ? checked : value\n+    }));\n+    // Clear error when user starts typing\n+    if (error) setError('');\n+  };\n+\n+  const handleSubmit = async (e: React.FormEvent) => {\n+    e.preventDefault();\n+    setError('');\n+    setIsLoading(true);\n+\n+    try {\n+      if (isSignup) {\n+        // Handle signup logic\n+        if (formData.password !== formData.confirmPassword) {\n+          setError('Passwords do not match');\n+          setIsLoading(false);\n+          return;\n+        }\n+        if (!formData.agreeToTerms) {\n+          setError('Please agree to the terms and conditions');\n+          setIsLoading(false);\n+          return;\n+        }\n+\n+        const result = await authService.signup({\n+          firstName: formData.firstName,\n+          lastName: formData.lastName,\n+          email: formData.email,\n+          password: formData.password,\n+          company: formData.company\n+        });\n+\n+        if (result.success && result.user) {\n+          onLogin(result.user);\n+        } else {\n+          setError(result.error || 'Signup failed');\n+        }\n+      } else {\n+        // Handle login logic\n+        const loginIdentifier = formData.username || formData.email;\n+        const result = await authService.login(loginIdentifier, formData.password);\n+        \n+        if (result.success && result.user) {\n+          onLogin(result.user);\n+        } else {\n+          setError(result.error || 'Login failed');\n+        }\n+      }\n+    } catch (error) {\n+      setError('An unexpected error occurred. Please try again.');\n+    } finally {\n+      setIsLoading(false);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n+      <div className=\"max-w-md w-full\">\n+        {/* Logo and Branding */}\n+        <div className=\"text-center mb-8\">\n+          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n+            <TrendingUp className=\"w-8 h-8 text-white\" />\n+          </div>\n+          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">AI Marketing Assistant</h1>\n+          <p className=\"text-gray-600\">Advertising Intelligence Platform</p>\n+        </div>\n+\n+        {/* Features Preview */}\n+        <div className=\"mb-8 space-y-4\">\n+          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n+            <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n+              <Zap className=\"w-4 h-4 text-green-600\" />\n+            </div>\n+            <span>Real-time performance optimization</span>\n+          </div>\n+          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n+            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n+              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\n+            </div>\n+            <span>Advanced analytics & insights</span>\n+          </div>\n+          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n+            <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n+              <TrendingUp className=\"w-4 h-4 text-purple-600\" />\n+            </div>\n+            <span>Automated campaign management</span>\n+          </div>\n+        </div>\n+\n+        {/* Login/Signup Form */}\n+        <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n+          {/* Form Toggle */}\n+          <div className=\"flex bg-gray-100 rounded-lg p-1 mb-6\">\n+            <button\n+              type=\"button\"\n+              onClick={() => {\n+                setIsSignup(false);\n+                setError('');\n+              }}\n+              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n+                !isSignup\n+                  ? 'bg-white text-gray-900 shadow-sm'\n+                  : 'text-gray-600 hover:text-gray-900'\n+              }`}\n+            >\n+              Sign In\n+            </button>\n+            <button\n+              type=\"button\"\n+              onClick={() => {\n+                setIsSignup(true);\n+                setError('');\n+              }}\n+              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n+                isSignup\n+                  ? 'bg-white text-gray-900 shadow-sm'\n+                  : 'text-gray-600 hover:text-gray-900'\n+              }`}\n+            >\n+              Sign Up\n+            </button>\n+          </div>\n+\n+          {/* Error Message */}\n+          {error && (\n+            <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n+              <p className=\"text-sm text-red-800\">{error}</p>\n+            </div>\n+          )}\n+\n+          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n+            {isSignup && (\n+              <>\n+                <div className=\"grid grid-cols-2 gap-4\">\n+                  <div>\n+                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                      First Name\n+                    </label>\n+                    <input\n+                      type=\"text\"\n+                      id=\"firstName\"\n+                      name=\"firstName\"\n+                      value={formData.firstName}\n+                      onChange={handleInputChange}\n+                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                      placeholder=\"John\"\n+                      required\n+                      disabled={isLoading}\n+                    />\n+                  </div>\n+                  <div>\n+                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                      Last Name\n+                    </label>\n+                    <input\n+                      type=\"text\"\n+                      id=\"lastName\"\n+                      name=\"lastName\"\n+                      value={formData.lastName}\n+                      onChange={handleInputChange}\n+                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                      placeholder=\"Doe\"\n+                      required\n+                      disabled={isLoading}\n+                    />\n+                  </div>\n+                </div>\n+                <div>\n+                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                    Company Name\n+                  </label>\n+                  <input\n+                    type=\"text\"\n+                    id=\"company\"\n+                    name=\"company\"\n+                    value={formData.company}\n+                    onChange={handleInputChange}\n+                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                    placeholder=\"Your Company\"\n+                    required\n+                    disabled={isLoading}\n+                  />\n+                </div>\n+              </>\n+            )}\n+            \n+            {!isSignup && (\n+              <div>\n+                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                  Username or Email\n+                </label>\n+                <input\n+                  type=\"text\"\n+                  id=\"username\"\n+                  name=\"username\"\n+                  value={formData.username}\n+                  onChange={handleInputChange}\n+                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                  placeholder=\"john_doe or john@example.com\"\n+                  required\n+                  disabled={isLoading}\n+                />\n+              </div>\n+            )}\n+            \n+            <div>\n+              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                Email Address\n+              </label>\n+              <input\n+                type=\"email\"\n+                id=\"email\"\n+                name=\"email\"\n+                value={formData.email}\n+                onChange={handleInputChange}\n+                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                placeholder=\"your@email.com\"\n+                required\n+                disabled={isLoading}\n+              />\n+            </div>\n+            <div>\n+              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                Password\n+              </label>\n+              <div className=\"relative\">\n+                <input\n+                  type={showPassword ? \"text\" : \"password\"}\n+                  id=\"password\"\n+                  name=\"password\"\n+                  value={formData.password}\n+                  onChange={handleInputChange}\n+                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                  placeholder=\"••••••••\"\n+                  required\n+                  disabled={isLoading}\n+                />\n+                <button\n+                  type=\"button\"\n+                  onClick={() => setShowPassword(!showPassword)}\n+                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n+                  disabled={isLoading}\n+                >\n+                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n+                </button>\n+              </div>\n+              {isSignup && (\n+                <p className=\"mt-1 text-xs text-gray-500\">\n+                  Must be at least 8 characters with uppercase, lowercase, and number\n+                </p>\n+              )}\n+            </div>\n+            {isSignup && (\n+              <div>\n+                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n+                  Confirm Password\n+                </label>\n+                <div className=\"relative\">\n+                  <input\n+                    type={showConfirmPassword ? \"text\" : \"password\"}\n+                    id=\"confirmPassword\"\n+                    name=\"confirmPassword\"\n+                    value={formData.confirmPassword}\n+                    onChange={handleInputChange}\n+                    className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n+                    placeholder=\"••••••••\"\n+                    required\n+                    disabled={isLoading}\n+                  />\n+                  <button\n+                    type=\"button\"\n+                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n+                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n+                    disabled={isLoading}\n+                  >\n+                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n+                  </button>\n+                </div>\n+              </div>\n+            )}\n+            {isSignup && (\n+              <div className=\"flex items-start space-x-3\">\n+                <input\n+                  type=\"checkbox\"\n+                  id=\"agreeToTerms\"\n+                  name=\"agreeToTerms\"\n+                  checked={formData.agreeToTerms}\n+                  onChange={handleInputChange}\n+                  className=\"mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n+                  required\n+                  disabled={isLoading}\n+                />\n+                <label htmlFor=\"agreeToTerms\" className=\"text-sm text-gray-700\">\n+                  I agree to the{' '}\n+                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n+                    Terms of Service\n+                  </a>{' '}\n+                  and{' '}\n+                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n+                    Privacy Policy\n+                  </a>\n+                </label>\n+              </div>\n+            )}\n+            <button\n+              type=\"submit\"\n+              disabled={isLoading}\n+              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n+            >\n+              {isLoading ? (\n+                <div className=\"flex items-center justify-center space-x-2\">\n+                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n+                  <span>{isSignup ? 'Creating Account...' : 'Signing In...'}</span>\n+                </div>\n+              ) : (\n+                isSignup ? 'Create Account' : 'Sign In'\n+              )}\n+            </button>\n+          </form>\n+          \n+          {!isSignup && (\n+            <div className=\"mt-6 text-center\">\n+              <a href=\"#\" className=\"text-sm text-blue-600 hover:text-blue-700\">\n+                Forgot your password?\n+              </a>\n+            </div>\n+          )}\n+          \n+          {isSignup && (\n+            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n+              <div className=\"flex items-start space-x-3\">\n+                <TrendingUp className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n+                <div>\n+                  <h4 className=\"font-medium text-blue-900\">What happens next?</h4>\n+                  <ul className=\"mt-2 text-sm text-blue-800 space-y-1\">\n+                    <li>• Connect your Google Ads and Meta Ads accounts</li>\n+                    <li>• AI analyzes your campaign performance</li>\n+                    <li>• Start receiving optimization recommendations</li>\n+                  </ul>\n+                </div>\n+              </div>\n+            </div>\n+          )}\n+        </div>\n+\n+        {!isSignup && (\n+          <div className=\"mt-8 text-center text-sm text-gray-500\">\n+            Don't have an account?{' '}\n+            <button\n+              onClick={() => {\n+                setIsSignup(true);\n+                setError('');\n+              }}\n+              className=\"text-blue-600 hover:text-blue-700 underline\"\n+            >\n+              Sign up\n+            </button>\n+          </div>\n+        )}\n+        \n+        {isSignup && (\n+          <div className=\"mt-8 text-center text-sm text-gray-500\">\n+            Already have an account?{' '}\n+            <button\n+              onClick={() => {\n+                setIsSignup(false);\n+                setError('');\n+              }}\n+              className=\"text-blue-600 hover:text-blue-700 underline\"\n+            >\n+              Sign in\n+            </button>\n+          </div>\n+        )}\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default LoginScreen;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755589689553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -406,795 +406,5 @@\n     </div>\n   );\n };\n \n-export default LoginScreen;\n-import React from 'react';\n-import { TrendingUp, Zap, BarChart3, Eye, EyeOff } from 'lucide-react';\n-\n-interface LoginScreenProps {\n-  onLogin: () => void;\n-}\n-\n-const LoginScreen: React.FC<LoginScreenProps> = ({ onLogin }) => {\n-  const [isSignup, setIsSignup] = React.useState(false);\n-  const [showPassword, setShowPassword] = React.useState(false);\n-  const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\n-  const [formData, setFormData] = React.useState({\n-    firstName: '',\n-    lastName: '',\n-    email: '',\n-    password: '',\n-    confirmPassword: '',\n-    company: '',\n-    agreeToTerms: false\n-  });\n-\n-  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    const { name, value, type, checked } = e.target;\n-    setFormData(prev => ({\n-      ...prev,\n-      [name]: type === 'checkbox' ? checked : value\n-    }));\n-  };\n-\n-  const handleSubmit = (e: React.FormEvent) => {\n-    e.preventDefault();\n-    if (isSignup) {\n-      // Handle signup logic\n-      if (formData.password !== formData.confirmPassword) {\n-        alert('Passwords do not match');\n-        return;\n-      }\n-      if (!formData.agreeToTerms) {\n-        alert('Please agree to the terms and conditions');\n-        return;\n-      }\n-    }\n-    onLogin();\n-  };\n-  return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n-      <div className=\"max-w-md w-full\">\n-        {/* Logo and Branding */}\n-        <div className=\"text-center mb-8\">\n-          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n-            <TrendingUp className=\"w-8 h-8 text-white\" />\n-          </div>\n-          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">AI Marketing Assistant</h1>\n-          <p className=\"text-gray-600\">Advertising Intelligence Platform</p>\n-        </div>\n-\n-        {/* Features Preview */}\n-        <div className=\"mb-8 space-y-4\">\n-          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n-            <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n-              <Zap className=\"w-4 h-4 text-green-600\" />\n-            </div>\n-            <span>Real-time performance optimization</span>\n-          </div>\n-          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n-            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n-              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\n-            </div>\n-            <span>Advanced analytics & insights</span>\n-          </div>\n-          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n-            <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n-              <TrendingUp className=\"w-4 h-4 text-purple-600\" />\n-            </div>\n-            <span>Automated campaign management</span>\n-          </div>\n-        </div>\n-\n-        {/* Login/Signup Form */}\n-        <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n-          {/* Form Toggle */}\n-          <div className=\"flex bg-gray-100 rounded-lg p-1 mb-6\">\n-            <button\n-              type=\"button\"\n-              onClick={() => setIsSignup(false)}\n-              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n-                !isSignup\n-                  ? 'bg-white text-gray-900 shadow-sm'\n-                  : 'text-gray-600 hover:text-gray-900'\n-              }`}\n-            >\n-              Sign In\n-            </button>\n-            <button\n-              type=\"button\"\n-              onClick={() => setIsSignup(true)}\n-              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n-                isSignup\n-                  ? 'bg-white text-gray-900 shadow-sm'\n-                  : 'text-gray-600 hover:text-gray-900'\n-              }`}\n-            >\n-              Sign Up\n-            </button>\n-          </div>\n-\n-          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n-            {isSignup && (\n-              <>\n-                <div className=\"grid grid-cols-2 gap-4\">\n-                  <div>\n-                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                      First Name\n-                    </label>\n-                    <input\n-                      type=\"text\"\n-                      id=\"firstName\"\n-                      name=\"firstName\"\n-                      value={formData.firstName}\n-                      onChange={handleInputChange}\n-                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n-                      placeholder=\"John\"\n-                      required\n-                    />\n-                  </div>\n-                  <div>\n-                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                      Last Name\n-                    </label>\n-                    <input\n-                      type=\"text\"\n-                      id=\"lastName\"\n-                      name=\"lastName\"\n-                      value={formData.lastName}\n-                      onChange={handleInputChange}\n-                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n-                      placeholder=\"Doe\"\n-                      required\n-                    />\n-                  </div>\n-                </div>\n-                <div>\n-                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                    Company Name\n-                  </label>\n-                  <input\n-                    type=\"text\"\n-                    id=\"company\"\n-                    name=\"company\"\n-                    value={formData.company}\n-                    onChange={handleInputChange}\n-                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n-                    placeholder=\"Your Company\"\n-                    required\n-                  />\n-                </div>\n-              </>\n-            )}\n-            <div>\n-              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                Email Address\n-              </label>\n-              <input\n-                type=\"email\"\n-                id=\"email\"\n-                name=\"email\"\n-                value={formData.email}\n-                onChange={handleInputChange}\n-                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n-                placeholder=\"your@email.com\"\n-                required\n-              />\n-            </div>\n-            <div>\n-              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                Password\n-              </label>\n-              <div className=\"relative\">\n-                <input\n-                  type={showPassword ? \"text\" : \"password\"}\n-                  id=\"password\"\n-                  name=\"password\"\n-                  value={formData.password}\n-                  onChange={handleInputChange}\n-                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n-                  placeholder=\"••••••••\"\n-                  required\n-                />\n-                <button\n-                  type=\"button\"\n-                  onClick={() => setShowPassword(!showPassword)}\n-                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n-                >\n-                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n-                </button>\n-              </div>\n-              {isSignup && (\n-                <p className=\"mt-1 text-xs text-gray-500\">\n-                  Must be at least 8 characters with uppercase, lowercase, and number\n-                </p>\n-              )}\n-            </div>\n-            {isSignup && (\n-              <div>\n-                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                  Confirm Password\n-                </label>\n-                <div className=\"relative\">\n-                  <input\n-                    type={showConfirmPassword ? \"text\" : \"password\"}\n-                    id=\"confirmPassword\"\n-                    name=\"confirmPassword\"\n-                    value={formData.confirmPassword}\n-                    onChange={handleInputChange}\n-                    className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n-                    placeholder=\"••••••••\"\n-                    required\n-                  />\n-                  <button\n-                    type=\"button\"\n-                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n-                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n-                  >\n-                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n-                  </button>\n-                </div>\n-              </div>\n-            )}\n-            {isSignup && (\n-              <div className=\"flex items-start space-x-3\">\n-                <input\n-                  type=\"checkbox\"\n-                  id=\"agreeToTerms\"\n-                  name=\"agreeToTerms\"\n-                  checked={formData.agreeToTerms}\n-                  onChange={handleInputChange}\n-                  className=\"mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n-                  required\n-                />\n-                <label htmlFor=\"agreeToTerms\" className=\"text-sm text-gray-700\">\n-                  I agree to the{' '}\n-                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n-                    Terms of Service\n-                  </a>{' '}\n-                  and{' '}\n-                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n-                    Privacy Policy\n-                  </a>\n-                </label>\n-              </div>\n-            )}\n-            <button\n-              type=\"submit\"\n-              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n-            >\n-              {isSignup ? 'Create Account' : 'Sign In'}\n-            </button>\n-          </form>\n-          \n-          {!isSignup && (\n-            <div className=\"mt-6 text-center\">\n-              <a href=\"#\" className=\"text-sm text-blue-600 hover:text-blue-700\">\n-                Forgot your password?\n-              </a>\n-            </div>\n-          )}\n-          \n-          {isSignup && (\n-            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n-              <div className=\"flex items-start space-x-3\">\n-                <TrendingUp className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n-                <div>\n-                  <h4 className=\"font-medium text-blue-900\">What happens next?</h4>\n-                  <ul className=\"mt-2 text-sm text-blue-800 space-y-1\">\n-                    <li>• Connect your Google Ads and Meta Ads accounts</li>\n-                    <li>• AI analyzes your campaign performance</li>\n-                    <li>• Start receiving optimization recommendations</li>\n-                  </ul>\n-                </div>\n-              </div>\n-            </div>\n-          )}\n-        </div>\n-\n-        {!isSignup && (\n-          <div className=\"mt-8 text-center text-sm text-gray-500\">\n-            Don't have an account?{' '}\n-            <button\n-              onClick={() => setIsSignup(true)}\n-              className=\"text-blue-600 hover:text-blue-700 underline\"\n-            >\n-              Sign up\n-            </button>\n-          </div>\n-        )}\n-        \n-        {isSignup && (\n-          <div className=\"mt-8 text-center text-sm text-gray-500\">\n-            Already have an account?{' '}\n-            <button\n-              onClick={() => setIsSignup(false)}\n-              className=\"text-blue-600 hover:text-blue-700 underline\"\n-            >\n-              Sign in\n-            </button>\n-          </div>\n-        )}\n-      </div>\n-    </div>\n-  );\n-};\n-\n-export default LoginScreen;\n-import React from 'react';\n-import { TrendingUp, Zap, BarChart3, Eye, EyeOff } from 'lucide-react';\n-import authService from '../services/authService';\n-import { SignupRequest, LoginRequest } from '../types';\n-\n-interface LoginScreenProps {\n-  onLogin: () => void;\n-}\n-\n-const LoginScreen: React.FC<LoginScreenProps> = ({ onLogin }) => {\n-  const [isSignup, setIsSignup] = React.useState(false);\n-  const [showPassword, setShowPassword] = React.useState(false);\n-  const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\n-  const [isLoading, setIsLoading] = React.useState(false);\n-  const [errors, setErrors] = React.useState<Record<string, string[]>>({});\n-  const [formData, setFormData] = React.useState({\n-    username: '',\n-    firstName: '',\n-    lastName: '',\n-    email: '',\n-    password: '',\n-    confirmPassword: '',\n-    company: '',\n-    agreeToTerms: false\n-  });\n-\n-  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n-    const { name, value, type, checked } = e.target;\n-    setFormData(prev => ({\n-      ...prev,\n-      [name]: type === 'checkbox' ? checked : value\n-    }));\n-    \n-    // Clear errors when user starts typing\n-    if (errors[name]) {\n-      setErrors(prev => {\n-        const newErrors = { ...prev };\n-        delete newErrors[name];\n-        return newErrors;\n-      });\n-    }\n-  };\n-\n-  const validateForm = (): boolean => {\n-    const newErrors: Record<string, string[]> = {};\n-\n-    if (isSignup) {\n-      if (!formData.username) newErrors.username = ['Username is required.'];\n-      if (!formData.firstName) newErrors.firstName = ['First name is required.'];\n-      if (!formData.lastName) newErrors.lastName = ['Last name is required.'];\n-      if (!formData.company) newErrors.company = ['Company name is required.'];\n-      if (!formData.email) newErrors.email = ['Email is required.'];\n-      if (!formData.password) newErrors.password = ['Password is required.'];\n-      if (formData.password !== formData.confirmPassword) {\n-        newErrors.confirmPassword = ['Passwords do not match.'];\n-      }\n-      if (!formData.agreeToTerms) {\n-        newErrors.agreeToTerms = ['You must agree to the terms and conditions.'];\n-      }\n-    } else {\n-      if (!formData.username) newErrors.username = ['Username is required.'];\n-      if (!formData.password) newErrors.password = ['Password is required.'];\n-    }\n-\n-    setErrors(newErrors);\n-    return Object.keys(newErrors).length === 0;\n-  };\n-\n-  const handleSubmit = async (e: React.FormEvent) => {\n-    e.preventDefault();\n-    \n-    if (!validateForm()) {\n-      return;\n-    }\n-\n-    setIsLoading(true);\n-    setErrors({});\n-\n-    try {\n-      if (isSignup) {\n-        const signupData: SignupRequest = {\n-          username: formData.username,\n-          first_name: formData.firstName,\n-          last_name: formData.lastName,\n-          email: formData.email,\n-          password1: formData.password,\n-          password2: formData.confirmPassword,\n-          company_name: formData.company,\n-        };\n-\n-        const response = await authService.signup(signupData);\n-        \n-        if (response.success) {\n-          onLogin();\n-        } else if (response.errors) {\n-          setErrors(response.errors);\n-        }\n-      } else {\n-        const loginData: LoginRequest = {\n-          username: formData.username,\n-          password: formData.password,\n-        };\n-\n-        const response = await authService.login(loginData);\n-        \n-        if (response.success) {\n-          onLogin();\n-        } else if (response.errors) {\n-          setErrors(response.errors);\n-        }\n-      }\n-    } catch (error) {\n-      console.error('Authentication error:', error);\n-      setErrors({ general: ['An unexpected error occurred. Please try again.'] });\n-    } finally {\n-      setIsLoading(false);\n-    }\n-  };\n-\n-  const getFieldError = (fieldName: string): string | null => {\n-    return errors[fieldName]?.[0] || null;\n-  };\n-\n-  return (\n-    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n-      <div className=\"max-w-md w-full\">\n-        {/* Logo and Branding */}\n-        <div className=\"text-center mb-8\">\n-          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n-            <TrendingUp className=\"w-8 h-8 text-white\" />\n-          </div>\n-          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">AI Marketing Assistant</h1>\n-          <p className=\"text-gray-600\">Advertising Intelligence Platform</p>\n-        </div>\n-\n-        {/* Features Preview */}\n-        <div className=\"mb-8 space-y-4\">\n-          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n-            <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n-              <Zap className=\"w-4 h-4 text-green-600\" />\n-            </div>\n-            <span>Real-time performance optimization</span>\n-          </div>\n-          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n-            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n-              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\n-            </div>\n-            <span>Advanced analytics & insights</span>\n-          </div>\n-          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n-            <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n-              <TrendingUp className=\"w-4 h-4 text-purple-600\" />\n-            </div>\n-            <span>Automated campaign management</span>\n-          </div>\n-        </div>\n-\n-        {/* Login/Signup Form */}\n-        <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n-          {/* Form Toggle */}\n-          <div className=\"flex bg-gray-100 rounded-lg p-1 mb-6\">\n-            <button\n-              type=\"button\"\n-              onClick={() => setIsSignup(false)}\n-              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n-                !isSignup\n-                  ? 'bg-white text-gray-900 shadow-sm'\n-                  : 'text-gray-600 hover:text-gray-900'\n-              }`}\n-            >\n-              Sign In\n-            </button>\n-            <button\n-              type=\"button\"\n-              onClick={() => setIsSignup(true)}\n-              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n-                isSignup\n-                  ? 'bg-white text-gray-900 shadow-sm'\n-                  : 'text-gray-600 hover:text-gray-900'\n-              }`}\n-            >\n-              Sign Up\n-            </button>\n-          </div>\n-\n-          {/* General Error Display */}\n-          {errors.general && (\n-            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n-              <p className=\"text-sm text-red-800\">{errors.general[0]}</p>\n-            </div>\n-          )}\n-\n-          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n-            {isSignup && (\n-              <>\n-                <div>\n-                  <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                    Username\n-                  </label>\n-                  <input\n-                    type=\"text\"\n-                    id=\"username\"\n-                    name=\"username\"\n-                    value={formData.username}\n-                    onChange={handleInputChange}\n-                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                      getFieldError('username') ? 'border-red-300' : 'border-gray-300'\n-                    }`}\n-                    placeholder=\"john_doe\"\n-                    required\n-                  />\n-                  {getFieldError('username') && (\n-                    <p className=\"mt-1 text-sm text-red-600\">{getFieldError('username')}</p>\n-                  )}\n-                </div>\n-                <div className=\"grid grid-cols-2 gap-4\">\n-                  <div>\n-                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                      First Name\n-                    </label>\n-                    <input\n-                      type=\"text\"\n-                      id=\"firstName\"\n-                      name=\"firstName\"\n-                      value={formData.firstName}\n-                      onChange={handleInputChange}\n-                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                        getFieldError('firstName') ? 'border-red-300' : 'border-gray-300'\n-                      }`}\n-                      placeholder=\"John\"\n-                      required\n-                    />\n-                    {getFieldError('firstName') && (\n-                      <p className=\"mt-1 text-sm text-red-600\">{getFieldError('firstName')}</p>\n-                    )}\n-                  </div>\n-                  <div>\n-                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                      Last Name\n-                    </label>\n-                    <input\n-                      type=\"text\"\n-                      id=\"lastName\"\n-                      name=\"lastName\"\n-                      value={formData.lastName}\n-                      onChange={handleInputChange}\n-                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                        getFieldError('lastName') ? 'border-red-300' : 'border-gray-300'\n-                      }`}\n-                      placeholder=\"Doe\"\n-                      required\n-                    />\n-                    {getFieldError('lastName') && (\n-                      <p className=\"mt-1 text-sm text-red-600\">{getFieldError('lastName')}</p>\n-                    )}\n-                  </div>\n-                </div>\n-                <div>\n-                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                    Company Name\n-                  </label>\n-                  <input\n-                    type=\"text\"\n-                    id=\"company\"\n-                    name=\"company\"\n-                    value={formData.company}\n-                    onChange={handleInputChange}\n-                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                      getFieldError('company') ? 'border-red-300' : 'border-gray-300'\n-                    }`}\n-                    placeholder=\"Your Company\"\n-                    required\n-                  />\n-                  {getFieldError('company') && (\n-                    <p className=\"mt-1 text-sm text-red-600\">{getFieldError('company')}</p>\n-                  )}\n-                </div>\n-              </>\n-            )}\n-            \n-            {!isSignup && (\n-              <div>\n-                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                  Username\n-                </label>\n-                <input\n-                  type=\"text\"\n-                  id=\"username\"\n-                  name=\"username\"\n-                  value={formData.username}\n-                  onChange={handleInputChange}\n-                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                    getFieldError('username') ? 'border-red-300' : 'border-gray-300'\n-                  }`}\n-                  placeholder=\"john_doe\"\n-                  required\n-                />\n-                {getFieldError('username') && (\n-                  <p className=\"mt-1 text-sm text-red-600\">{getFieldError('username')}</p>\n-                )}\n-              </div>\n-            )}\n-            \n-            <div>\n-              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                Email Address\n-              </label>\n-              <input\n-                type=\"email\"\n-                id=\"email\"\n-                name=\"email\"\n-                value={formData.email}\n-                onChange={handleInputChange}\n-                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                  getFieldError('email') ? 'border-red-300' : 'border-gray-300'\n-                }`}\n-                placeholder=\"your@email.com\"\n-                required\n-              />\n-              {getFieldError('email') && (\n-                <p className=\"mt-1 text-sm text-red-600\">{getFieldError('email')}</p>\n-              )}\n-            </div>\n-            <div>\n-              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                Password\n-              </label>\n-              <div className=\"relative\">\n-                <input\n-                  type={showPassword ? \"text\" : \"password\"}\n-                  id=\"password\"\n-                  name=\"password\"\n-                  value={formData.password}\n-                  onChange={handleInputChange}\n-                  className={`w-full px-4 py-3 pr-12 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                    getFieldError('password') ? 'border-red-300' : 'border-gray-300'\n-                  }`}\n-                  placeholder=\"••••••••\"\n-                  required\n-                />\n-                <button\n-                  type=\"button\"\n-                  onClick={() => setShowPassword(!showPassword)}\n-                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n-                >\n-                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n-                </button>\n-              </div>\n-              {isSignup && (\n-                <p className=\"mt-1 text-xs text-gray-500\">\n-                  Must be at least 8 characters with uppercase, lowercase, and number\n-                </p>\n-              )}\n-              {getFieldError('password') && (\n-                <p className=\"mt-1 text-sm text-red-600\">{getFieldError('password')}</p>\n-              )}\n-            </div>\n-            {isSignup && (\n-              <div>\n-                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n-                  Confirm Password\n-                </label>\n-                <div className=\"relative\">\n-                  <input\n-                    type={showConfirmPassword ? \"text\" : \"password\"}\n-                    id=\"confirmPassword\"\n-                    name=\"confirmPassword\"\n-                    value={formData.confirmPassword}\n-                    onChange={handleInputChange}\n-                    className={`w-full px-4 py-3 pr-12 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n-                      getFieldError('confirmPassword') ? 'border-red-300' : 'border-gray-300'\n-                    }`}\n-                    placeholder=\"••••••••\"\n-                    required\n-                  />\n-                  <button\n-                    type=\"button\"\n-                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n-                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n-                  >\n-                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n-                  </button>\n-                </div>\n-                {getFieldError('confirmPassword') && (\n-                  <p className=\"mt-1 text-sm text-red-600\">{getFieldError('confirmPassword')}</p>\n-                )}\n-              </div>\n-            )}\n-            {isSignup && (\n-              <div className=\"flex items-start space-x-3\">\n-                <input\n-                  type=\"checkbox\"\n-                  id=\"agreeToTerms\"\n-                  name=\"agreeToTerms\"\n-                  checked={formData.agreeToTerms}\n-                  onChange={handleInputChange}\n-                  className=\"mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n-                  required\n-                />\n-                <label htmlFor=\"agreeToTerms\" className=\"text-sm text-gray-700\">\n-                  I agree to the{' '}\n-                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n-                    Terms of Service\n-                  </a>{' '}\n-                  and{' '}\n-                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n-                    Privacy Policy\n-                  </a>\n-                </label>\n-              </div>\n-            )}\n-            {getFieldError('agreeToTerms') && (\n-              <p className=\"text-sm text-red-600\">{getFieldError('agreeToTerms')}</p>\n-            )}\n-            <button\n-              type=\"submit\"\n-              disabled={isLoading}\n-              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n-            >\n-              {isLoading ? 'Processing...' : (isSignup ? 'Create Account' : 'Sign In')}\n-            </button>\n-          </form>\n-          \n-          {!isSignup && (\n-            <div className=\"mt-6 text-center\">\n-              <a href=\"#\" className=\"text-sm text-blue-600 hover:text-blue-700\">\n-                Forgot your password?\n-              </a>\n-            </div>\n-          )}\n-          \n-          {isSignup && (\n-            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n-              <div className=\"flex items-start space-x-3\">\n-                <TrendingUp className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n-                <div>\n-                  <h4 className=\"font-medium text-blue-900\">What happens next?</h4>\n-                  <ul className=\"mt-2 text-sm text-blue-800 space-y-1\">\n-                    <li>• Connect your Google Ads and Meta Ads accounts</li>\n-                    <li>• AI analyzes your campaign performance</li>\n-                    <li>• Start receiving optimization recommendations</li>\n-                  </ul>\n-                </div>\n-              </div>\n-            </div>\n-          )}\n-        </div>\n-\n-        {!isSignup && (\n-          <div className=\"mt-8 text-center text-sm text-gray-500\">\n-            Don't have an account?{' '}\n-            <button\n-              onClick={() => setIsSignup(true)}\n-              className=\"text-blue-600 hover:text-blue-700 underline\"\n-            >\n-              Sign up\n-            </button>\n-          </div>\n-        )}\n-        \n-        {isSignup && (\n-          <div className=\"mt-8 text-center text-sm text-gray-500\">\n-            Already have an account?{' '}\n-            <button\n-              onClick={() => setIsSignup(false)}\n-              className=\"text-blue-600 hover:text-blue-700 underline\"\n-            >\n-              Sign in\n-            </button>\n-          </div>\n-        )}\n-      </div>\n-    </div>\n-  );\n-};\n-\n export default LoginScreen;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1755587604298,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport { TrendingUp, Zap, BarChart3, Eye, EyeOff } from 'lucide-react';\nimport authService from '../services/authService';\nimport { SignupRequest, LoginRequest } from '../types';\n\ninterface LoginScreenProps {\n  onLogin: () => void;\n}\n\nconst LoginScreen: React.FC<LoginScreenProps> = ({ onLogin }) => {\n  const [isSignup, setIsSignup] = React.useState(false);\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState<Record<string, string[]>>({});\n  const [formData, setFormData] = React.useState({\n    username: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    company: '',\n    agreeToTerms: false\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    \n    // Clear errors when user starts typing\n    if (errors[name]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[name];\n        return newErrors;\n      });\n    }\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string[]> = {};\n\n    if (isSignup) {\n      if (!formData.username) newErrors.username = ['Username is required.'];\n      if (!formData.firstName) newErrors.firstName = ['First name is required.'];\n      if (!formData.lastName) newErrors.lastName = ['Last name is required.'];\n      if (!formData.company) newErrors.company = ['Company name is required.'];\n      if (!formData.email) newErrors.email = ['Email is required.'];\n      if (!formData.password) newErrors.password = ['Password is required.'];\n      if (formData.password !== formData.confirmPassword) {\n        newErrors.confirmPassword = ['Passwords do not match.'];\n      }\n      if (!formData.agreeToTerms) {\n        newErrors.agreeToTerms = ['You must agree to the terms and conditions.'];\n      }\n    } else {\n      if (!formData.username) newErrors.username = ['Username is required.'];\n      if (!formData.password) newErrors.password = ['Password is required.'];\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      if (isSignup) {\n        const signupData: SignupRequest = {\n          username: formData.username,\n          first_name: formData.firstName,\n          last_name: formData.lastName,\n          email: formData.email,\n          password1: formData.password,\n          password2: formData.confirmPassword,\n          company_name: formData.company,\n        };\n\n        const response = await authService.signup(signupData);\n        \n        if (response.success) {\n          onLogin();\n        } else if (response.errors) {\n          setErrors(response.errors);\n        }\n      } else {\n        const loginData: LoginRequest = {\n          username: formData.username,\n          password: formData.password,\n        };\n\n        const response = await authService.login(loginData);\n        \n        if (response.success) {\n          onLogin();\n        } else if (response.errors) {\n          setErrors(response.errors);\n        }\n      }\n    } catch (error) {\n      console.error('Authentication error:', error);\n      setErrors({ general: ['An unexpected error occurred. Please try again.'] });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getFieldError = (fieldName: string): string | null => {\n    return errors[fieldName]?.[0] || null;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50 flex items-center justify-center px-4\">\n      <div className=\"max-w-md w-full\">\n        {/* Logo and Branding */}\n        <div className=\"text-center mb-8\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-600 rounded-xl mb-4\">\n            <TrendingUp className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">AI Marketing Assistant</h1>\n          <p className=\"text-gray-600\">Advertising Intelligence Platform</p>\n        </div>\n\n        {/* Features Preview */}\n        <div className=\"mb-8 space-y-4\">\n          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n            <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\n              <Zap className=\"w-4 h-4 text-green-600\" />\n            </div>\n            <span>Real-time performance optimization</span>\n          </div>\n          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\n              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\n            </div>\n            <span>Advanced analytics & insights</span>\n          </div>\n          <div className=\"flex items-center space-x-3 text-sm text-gray-700\">\n            <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\n              <TrendingUp className=\"w-4 h-4 text-purple-600\" />\n            </div>\n            <span>Automated campaign management</span>\n          </div>\n        </div>\n\n        {/* Login/Signup Form */}\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n          {/* Form Toggle */}\n          <div className=\"flex bg-gray-100 rounded-lg p-1 mb-6\">\n            <button\n              type=\"button\"\n              onClick={() => setIsSignup(false)}\n              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n                !isSignup\n                  ? 'bg-white text-gray-900 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              Sign In\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => setIsSignup(true)}\n              className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\n                isSignup\n                  ? 'bg-white text-gray-900 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              Sign Up\n            </button>\n          </div>\n\n          {/* General Error Display */}\n          {errors.general && (\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-sm text-red-800\">{errors.general[0]}</p>\n            </div>\n          )}\n\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            {isSignup && (\n              <>\n                <div>\n                  <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Username\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={formData.username}\n                    onChange={handleInputChange}\n                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                      getFieldError('username') ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                    placeholder=\"john_doe\"\n                    required\n                  />\n                  {getFieldError('username') && (\n                    <p className=\"mt-1 text-sm text-red-600\">{getFieldError('username')}</p>\n                  )}\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      First Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"firstName\"\n                      name=\"firstName\"\n                      value={formData.firstName}\n                      onChange={handleInputChange}\n                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                        getFieldError('firstName') ? 'border-red-300' : 'border-gray-300'\n                      }`}\n                      placeholder=\"John\"\n                      required\n                    />\n                    {getFieldError('firstName') && (\n                      <p className=\"mt-1 text-sm text-red-600\">{getFieldError('firstName')}</p>\n                    )}\n                  </div>\n                  <div>\n                    <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Last Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"lastName\"\n                      name=\"lastName\"\n                      value={formData.lastName}\n                      onChange={handleInputChange}\n                      className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                        getFieldError('lastName') ? 'border-red-300' : 'border-gray-300'\n                      }`}\n                      placeholder=\"Doe\"\n                      required\n                    />\n                    {getFieldError('lastName') && (\n                      <p className=\"mt-1 text-sm text-red-600\">{getFieldError('lastName')}</p>\n                    )}\n                  </div>\n                </div>\n                <div>\n                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Company Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"company\"\n                    name=\"company\"\n                    value={formData.company}\n                    onChange={handleInputChange}\n                    className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                      getFieldError('company') ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                    placeholder=\"Your Company\"\n                    required\n                  />\n                  {getFieldError('company') && (\n                    <p className=\"mt-1 text-sm text-red-600\">{getFieldError('company')}</p>\n                  )}\n                </div>\n              </>\n            )}\n            \n            {!isSignup && (\n              <div>\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Username\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                    getFieldError('username') ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                  placeholder=\"john_doe\"\n                  required\n                />\n                {getFieldError('username') && (\n                  <p className=\"mt-1 text-sm text-red-600\">{getFieldError('username')}</p>\n                )}\n              </div>\n            )}\n            \n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                className={`w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                  getFieldError('email') ? 'border-red-300' : 'border-gray-300'\n                }`}\n                placeholder=\"your@email.com\"\n                required\n              />\n              {getFieldError('email') && (\n                <p className=\"mt-1 text-sm text-red-600\">{getFieldError('email')}</p>\n              )}\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  className={`w-full px-4 py-3 pr-12 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                    getFieldError('password') ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                  placeholder=\"••••••••\"\n                  required\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n                >\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n              {isSignup && (\n                <p className=\"mt-1 text-xs text-gray-500\">\n                  Must be at least 8 characters with uppercase, lowercase, and number\n                </p>\n              )}\n              {getFieldError('password') && (\n                <p className=\"mt-1 text-sm text-red-600\">{getFieldError('password')}</p>\n              )}\n            </div>\n            {isSignup && (\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Confirm Password\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    id=\"confirmPassword\"\n                    name=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleInputChange}\n                    className={`w-full px-4 py-3 pr-12 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors ${\n                      getFieldError('confirmPassword') ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                    placeholder=\"••••••••\"\n                    required\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors\"\n                  >\n                    {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                  </button>\n                </div>\n                {getFieldError('confirmPassword') && (\n                  <p className=\"mt-1 text-sm text-red-600\">{getFieldError('confirmPassword')}</p>\n                )}\n              </div>\n            )}\n            {isSignup && (\n              <div className=\"flex items-start space-x-3\">\n                <input\n                  type=\"checkbox\"\n                  id=\"agreeToTerms\"\n                  name=\"agreeToTerms\"\n                  checked={formData.agreeToTerms}\n                  onChange={handleInputChange}\n                  className=\"mt-1 w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                  required\n                />\n                <label htmlFor=\"agreeToTerms\" className=\"text-sm text-gray-700\">\n                  I agree to the{' '}\n                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n                    Terms of Service\n                  </a>{' '}\n                  and{' '}\n                  <a href=\"#\" className=\"text-blue-600 hover:text-blue-700 underline\">\n                    Privacy Policy\n                  </a>\n                </label>\n              </div>\n            )}\n            {getFieldError('agreeToTerms') && (\n              <p className=\"text-sm text-red-600\">{getFieldError('agreeToTerms')}</p>\n            )}\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors duration-200 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? 'Processing...' : (isSignup ? 'Create Account' : 'Sign In')}\n            </button>\n          </form>\n          \n          {!isSignup && (\n            <div className=\"mt-6 text-center\">\n              <a href=\"#\" className=\"text-sm text-blue-600 hover:text-blue-700\">\n                Forgot your password?\n              </a>\n            </div>\n          )}\n          \n          {isSignup && (\n            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <div className=\"flex items-start space-x-3\">\n                <TrendingUp className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                <div>\n                  <h4 className=\"font-medium text-blue-900\">What happens next?</h4>\n                  <ul className=\"mt-2 text-sm text-blue-800 space-y-1\">\n                    <li>• Connect your Google Ads and Meta Ads accounts</li>\n                    <li>• AI analyzes your campaign performance</li>\n                    <li>• Start receiving optimization recommendations</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {!isSignup && (\n          <div className=\"mt-8 text-center text-sm text-gray-500\">\n            Don't have an account?{' '}\n            <button\n              onClick={() => setIsSignup(true)}\n              className=\"text-blue-600 hover:text-blue-700 underline\"\n            >\n              Sign up\n            </button>\n          </div>\n        )}\n        \n        {isSignup && (\n          <div className=\"mt-8 text-center text-sm text-gray-500\">\n            Already have an account?{' '}\n            <button\n              onClick={() => setIsSignup(false)}\n              className=\"text-blue-600 hover:text-blue-700 underline\"\n            >\n              Sign in\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;"
        }
    ]
}